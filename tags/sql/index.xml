<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Sql on j2gl bytes</title><link>https://j2gl.github.io/tags/sql/</link><description>Recent content in Sql on j2gl bytes</description><generator>Hugo -- 0.147.7</generator><language>en-us</language><lastBuildDate>Thu, 13 May 2021 19:34:42 +0200</lastBuildDate><atom:link href="https://j2gl.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>Filter jsonb Array Data in PostgreSQL</title><link>https://j2gl.github.io/posts/filter-jsonb-postgresql/</link><pubDate>Thu, 13 May 2021 19:34:42 +0200</pubDate><guid>https://j2gl.github.io/posts/filter-jsonb-postgresql/</guid><description>&lt;h2 id="filtering-jsonb-array-data-in-postgresql">Filtering &lt;code>jsonb&lt;/code> Array Data in PostgreSQL&lt;/h2>
&lt;p>One day, I faced a challenge: how do you filter rows in a PostgreSQL table when the data you want to query lives inside a &lt;code>jsonb&lt;/code> array?&lt;/p>
&lt;p>Let me walk you through the solution step by step.&lt;/p>
&lt;hr>
&lt;h2 id="the-setup">The Setup&lt;/h2>
&lt;p>We will ll start by creating a temporary table called &lt;code>table1&lt;/code> with some JSON data stored in a column named &lt;code>dummy_data&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> TEMP &lt;span style="color:#66d9ef">TABLE&lt;/span> table1 &lt;span style="color:#66d9ef">AS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SELECT&lt;/span> id::int, dummy_data::jsonb &lt;span style="color:#66d9ef">FROM&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;AB123456&amp;#34;, &amp;#34;other&amp;#34;: &amp;#34;xxx&amp;#34;, &amp;#34;amount&amp;#34;: 10, &amp;#34;step&amp;#34;: &amp;#34;STEP_1&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;HH654654&amp;#34;, &amp;#34;other&amp;#34;: null, &amp;#34;amount&amp;#34;: 20, &amp;#34;step&amp;#34;: &amp;#34;STEP_2&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ]&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;45648asd&amp;#34;, &amp;#34;other&amp;#34;: null, &amp;#34;amount&amp;#34;: 30, &amp;#34;step&amp;#34;: &amp;#34;STEP_1&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;QWERASDF&amp;#34;, &amp;#34;other&amp;#34;: &amp;#34;asdf&amp;#34;, &amp;#34;amount&amp;#34;: 40, &amp;#34;step&amp;#34;: &amp;#34;STEP_2&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ]&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;[]&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;POIUASDF&amp;#34;, &amp;#34;other&amp;#34;: null, &amp;#34;amount&amp;#34;: 50, &amp;#34;step&amp;#34;: &amp;#34;STEP_1&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;SFDTGFDJ&amp;#34;, &amp;#34;other&amp;#34;: null, &amp;#34;amount&amp;#34;: 60, &amp;#34;step&amp;#34;: &amp;#34;STEP_2&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;DFGERUDD&amp;#34;, &amp;#34;other&amp;#34;: &amp;#34;1234&amp;#34;, &amp;#34;amount&amp;#34;: 70, &amp;#34;step&amp;#34;: &amp;#34;STEP_3&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;code&amp;#34;: &amp;#34;34567DTH&amp;#34;, &amp;#34;other&amp;#34;: null, &amp;#34;amount&amp;#34;: 80, &amp;#34;step&amp;#34;: &amp;#34;STEP_4&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ) &lt;span style="color:#66d9ef">AS&lt;/span> t(id, dummy_data);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates a table with data similar to the following:&lt;/p></description></item></channel></rss>